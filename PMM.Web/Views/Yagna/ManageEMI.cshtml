@model YagnaSevaModel
@using PMM.Web.Models.Yagna;
@using PMM.Core;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var data = Model.Id;
}

<div class="">
    <div class="page-title">
        <div class="title_left">
            <h3>
                MANAGE YAJMAN
            </h3>
        </div>
    </div>


    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginRouteForm("ManageEMI", FormMethod.Post, new { @id = "sevaForm" }))
            {
                @Html.AntiForgeryToken()

                @Html.HiddenFor(t => t.Karyakar.Id)
                @Html.HiddenFor(t => t.PRN)
                @Html.HiddenFor(t => t.IsContinue)
                @Html.HiddenFor(t => t.Yajmans.Id)
                @Html.HiddenFor(t => t.Karyakar.CityId)
                @Html.HiddenFor(t => t.Karyakar.MandalId)
                @Html.HiddenFor(t => t.Yajmans.CityId)
                @Html.HiddenFor(t => t.Yajmans.MandalId)
                @Html.HiddenFor(t => t.AccountDetail.Id)
                @Html.HiddenFor(t => t.Id)
                <div class="x_panel">
                    <div class="x_content">


                        <div class="col-md-12 pt10">
                            <span class="section">Seva Detail</span>
                        </div>
                        <div class="col-md-12">
                            <div class="col-md-4 pt10">
                                <label for="Amount">Sankalp Amount</label>
                                @Html.TextBoxFor(t => t.SankalpAmount, new { @class = "form-control", placeholder = CommonHelper.PlaceHolderDrdForSankalpAmount, @maxlength = 8, onkeypress = "return isNumberkey(event);" })
                                @Html.ValidationMessageFor(t => t.SankalpAmount)
                            </div>
                            <div class="col-md-4 pt10">
                                <label for="AccountDetail_PaidAmount">Paid Amount</label>
                                @Html.TextBoxFor(t => t.AccountDetail.PaidAmount, new { @class = "form-control", placeholder = CommonHelper.PlaceHolderDrdForSankalpAmount, @maxlength = 8, onkeypress = "return isNumberkey(event);" })
                                @Html.ValidationMessageFor(t => t.AccountDetail.PaidAmount)
                            </div>
                            <div class="col-md-4 pt10">
                                <label for="SevaGradeId">Seva Grade</label>
                                @Html.DropDownListFor(t => t.SevaGradeId, Model.SevaGrades, new { @class = "form-control", placeholder = CommonHelper.PlaceHolderDrdForSevaGrade })
                                @Html.ValidationMessageFor(t => t.SevaGradeId)
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="col-md-4 pt10">
                                <label for="DueAmount">Due Amount</label>
                                @*<input type="text" class="form-control disabled" id="DueAmount" value="0" disabled />*@
                                @Html.TextBoxFor(t => t.AccountDetail.DueAmount, new { @class = "form-control", placeholder = "0", @maxlength = 8, onkeypress = "return isNumberkey(event);", @readonly = "readonly" })


                            </div>
                            <div class="col-md-4 pt10">
                                <label for="Remarks">Remarks</label>
                                @Html.TextAreaFor(t => t.Remarks, new { @class = "form-control", placeholder = CommonHelper.PlaceHolderDrdForRemarks })
                            </div>
                            <div class="col-md-4 pt10"></div>
                        </div>

                        <div class="col-md-12 pt10">
                            <span class="section">Account Detail</span>
                        </div>
                        <div class="col-md-12 pt10">
                            <div class="col-md-4 pt10">
                                <label for="AccountDetail_BookNo">BookNo</label>
                                @Html.TextBoxFor(t => t.AccountDetail.BookNo, new { @class = "form-control", placeholder = CommonHelper.PlaceHolderTxtForBookNo, @maxlength = 5, onkeypress = "return isNumberkey(event);" })
                                @Html.ValidationMessageFor(t => t.AccountDetail.BookNo)
                            </div>
                            <div class="col-md-4 pt10">
                                <label for="AccountDetail_ReceiptNo">ReceiptNo</label>
                                @Html.TextBoxFor(t => t.AccountDetail.ReceiptNo, new { @class = "form-control", placeholder = CommonHelper.PlaceHolderTxtForReceiptNo, @maxlength = 5, onkeypress = "return isNumberkey(event);" })
                                @Html.ValidationMessageFor(t => t.AccountDetail.ReceiptNo)
                            </div>
                            <div class="col-md-4 pt10">
                                <label for="AccountDetail_DateOfReceipt">Date Of Receipt</label>
                                @Html.TextBoxFor(t => t.AccountDetail.DateOfReceipt, new { @class = "form-control", placeholder = CommonHelper.PlaceHolderTxtForDateOfReceipt })
                                @Html.ValidationMessageFor(t => t.AccountDetail.DateOfReceipt)
                            </div>
                        </div>

                        <div class="col-md-12 pt10">
                            <span class="section">Transaction Detail</span>
                        </div>
                        <div class="col-md-12 ">
                            <div class="col-md-3 pt10">
                                <label for="TransactionDetail_TransactionTypeId">Transaction Type</label>
                                @Html.DropDownListFor(t => t.TransactionDetail.TransactionTypeId, Model.TransactionDetail.TransactionTypes, new { @class = "form-control", placeholder = CommonHelper.PlaceHolderDrdForTransactionType })
                                @Html.ValidationMessageFor(t => t.TransactionDetail.TransactionTypeId)
                            </div>
                            <div class="col-md-3 pt10">
                                <label for="TransactionDetail_TransactionNumber" id="lblTransNo">Number</label>
                                @Html.TextBoxFor(t => t.TransactionDetail.TransactionNumber, new { @class = "form-control", placeholder = CommonHelper.PlaceHolderTxtForTransactionNumber, @maxlength = 10, onkeypress = "return isNumberkey(event);" })
                                @Html.ValidationMessageFor(t => t.TransactionDetail.TransactionNumber)
                            </div>

                            <div class="col-md-3 pt10">
                                <label for="TransactionDetail_DateOfIssue">Date Of Issue</label>
                                @Html.TextBoxFor(t => t.TransactionDetail.DateOfIssue, new { @class = "form-control", placeholder = CommonHelper.PlaceHolderTxtForDateOfIssue })
                                @Html.ValidationMessageFor(t => t.TransactionDetail.DateOfIssue)
                            </div>
                            <div class="col-md-3 pt10">
                                <label for="TransactionDetail_BankName">Bank Name</label>
                                @Html.TextBoxFor(t => t.TransactionDetail.BankName, new { @class = "form-control", placeholder = CommonHelper.PlaceHolderTxtForBankName })
                                @Html.ValidationMessageFor(t => t.TransactionDetail.BankName)
                            </div>
                        </div>

                        <div class="col-md-12 pt10 ">

                            <a data-toggle="collapse" href="#YajmanDetailCollapse">
                                <span class="section">
                                    Yajman Detail
                                </span>
                            </a>
                            <div class="clearfix"></div>
                        </div>
                        <div id="YajmanDetailCollapse" class="panel-collapse collapse">
                            <div class="col-md-12">
                                <div class="col-md-4 pt10">
                                    <label for="FirstName">FirstName</label>
                                    @Html.TextBoxFor(t => t.Yajmans.FirstName, new { @class = "form-control disabled", placeholder = CommonHelper.PlaceHolderTxtForFirstName, @readonly = "readonly" })
                                    @Html.ValidationMessageFor(t => t.Yajmans.FirstName)
                                </div>
                                <div class="col-md-4 pt10">
                                    <label for="MiddleName">FatherName</label>
                                    @Html.TextBoxFor(t => t.Yajmans.MiddleName, new { @class = "form-control disabled", placeholder = CommonHelper.PlaceHolderTxtForMiddleName, @readonly = "readonly" })
                                </div>
                                <div class="col-md-4 pt10">
                                    <label for="LastName">SurName</label>
                                    @Html.TextBoxFor(t => t.Yajmans.LastName, new { @class = "form-control disabled", placeholder = CommonHelper.PlaceHolderTxtForLastName, @readonly = "readonly" })
                                    @Html.ValidationMessageFor(t => t.Yajmans.LastName)
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-4 pt10">
                                    <label for="Mobile">Mobile</label>
                                    @Html.TextBoxFor(t => t.Yajmans.Mobile, new { @class = "form-control disabled", placeholder = CommonHelper.PlaceHolderTxtForMobileNo, @maxlength = 15, onkeypress = "return isNumberkey(event);", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(t => t.Yajmans.Mobile)
                                </div>
                                @*<div class="col-md-4 pt10">
                                        <label for="PANNumber">PANNO</label>
                                        @Html.TextBoxFor(t => t.Yajmans.PANNumber, new { @class = "form-control", placeholder = CommonHelper.PlaceHolderTxtForPANNo, @maxlength = 6 })

                                    </div>*@
                                <div class="col-md-4 pt10">
                                    <label for="PinCode">PinCode</label>
                                    @Html.TextBoxFor(t => t.Yajmans.PinCode, new { @class = "form-control disabled", placeholder = CommonHelper.PlaceHolderTxtForPinCode, @maxlength = 6, onkeypress = "return isNumberkey(event);", @readonly = "readonly" })

                                </div>
                                <div class="col-md-4 pt10"></div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-4 pt10">
                                    <label for="CityId">City</label>
                                    @Html.DropDownListFor(t => t.Yajmans.CityId, Model.Yajmans.CityList, new { @class = "form-control disabled", placeholder = CommonHelper.PlaceHolderDrdForCity, @disabled = "disabled" })
                                    @Html.ValidationMessageFor(t => t.Yajmans.CityId)
                                </div>
                                <div class="col-md-4 pt10">
                                    <label for="MandalId">Mandal</label>
                                    @Html.DropDownListFor(t => t.Yajmans.MandalId, Model.Yajmans.Mandals, new { @class = "form-control disabled", placeholder = CommonHelper.PlaceHolderDrdForMandal, @disabled = "disabled" })
                                    @Html.ValidationMessageFor(t => t.Yajmans.MandalId)
                                </div>
                                <div class="col-md-4 pt10">
                                    <label for="Address">Address</label>
                                    @Html.TextAreaFor(t => t.Yajmans.Address, new { @class = "form-control disabled", placeholder = CommonHelper.PlaceHolderTxtForAddress, @readonly = "readonly" })
                                    @Html.ValidationMessageFor(t => t.Yajmans.Address)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12 pt10">
                            <a data-toggle="collapse" href="#KaryakarDetailCollapse"><span class="section">Karyakar Detail</span></a>
                        </div>
                        <div id="KaryakarDetailCollapse" class="panel-collapse collapse">
                            <div class="col-md-12">
                                <div class="col-md-4 pt10">
                                    <label for="Karyakar_Mobile">Mobile</label>
                                    @Html.TextBoxFor(t => t.Karyakar.Mobile, new { @class = "form-control disabled", placeholder = CommonHelper.PlaceHolderTxtForMobileNo, @maxlength = 15, onkeypress = "return isNumberkey(event);", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(t => t.Karyakar.Mobile)
                                </div>
                                <div class="col-md-4 pt10">
                                    <label for="SvikrutiPatrakDetail.ReceiptNo">Yagna Receipt No</label>
                                    @Html.TextBoxFor(t => t.SvikrutiPatrakDetail.FormNo, new { @class = "form-control disabled", placeholder = CommonHelper.PlaceHolderTxtForFormtNo, @maxlength = 10, @readonly = "readonly" })
                                    @Html.ValidationMessageFor(t => t.SvikrutiPatrakDetail.FormNo)
                                </div>
                                <div class="col-md-4 pt10">

                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-4 pt10">
                                    <label for="Karyakar_FirstName">FirstName</label>
                                    @Html.TextBoxFor(t => t.Karyakar.FirstName, new { @class = "form-control disabled", placeholder = CommonHelper.PlaceHolderTxtForFirstName, @readonly = "readonly" })
                                    @Html.ValidationMessageFor(t => t.Karyakar.FirstName)
                                </div>
                                <div class="col-md-4 pt10">
                                    <label for="Karyakar_MiddleName">MiddleName</label>
                                    @Html.TextBoxFor(t => t.Karyakar.MiddleName, new { @class = "form-control disabled", placeholder = CommonHelper.PlaceHolderTxtForMiddleName, @readonly = "readonly" })
                                </div>
                                <div class="col-md-4 pt10">
                                    <label for="Karyakar_LastName">LastName</label>
                                    @Html.TextBoxFor(t => t.Karyakar.LastName, new { @class = "form-control disabled", placeholder = CommonHelper.PlaceHolderTxtForLastName, @readonly = "readonly" })
                                    @Html.ValidationMessageFor(t => t.Karyakar.LastName)
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-4 pt10">
                                    <label for="Karyakar_CityId">City</label>
                                    @Html.DropDownListFor(t => t.Karyakar.CityId, Model.Karyakar.CityList, new { @class = "form-control disabled", placeholder = CommonHelper.PlaceHolderDrdForCity, @disabled = "disabled" })
                                    @Html.ValidationMessageFor(t => t.Karyakar.CityId)
                                </div>
                                <div class="col-md-4 pt10">
                                    <label for="Karyakar_MandalId">Mandal</label>
                                    @Html.DropDownListFor(t => t.Karyakar.MandalId, Model.Karyakar.Mandals, new { @class = "form-control disabled", placeholder = CommonHelper.PlaceHolderDrdForMandal, @disabled = "disabled" })
                                    @Html.ValidationMessageFor(t => t.Karyakar.MandalId)
                                </div>
                                <div class="col-md-4 pt10"></div>
                            </div>
                        </div>
                        <div class="col-md-12 pb10">
                            <div class="col-md-1 pt10 pr0">
                                <input type="submit" value="Save" class="btn btn-success" />
                            </div>
                            <div class="col-md-1 pt10 pl0 pr0"><input type="reset" value="Reset" class="btn btn-info" /></div>
                            <div class="col-md-1 pt10 pl0 pr0">
                                <a href='@Url.RouteUrl("EMI", new { id = Model.PRN })'>
                                    <input type="button" value="Cancel" class="btn btn-danger" onclick="return confirm('Are you sure want to cancel this request?')" />
                                </a>
                            </div>
                            <div class="col-md-9 pt10"></div>
                        </div>

                    </div>
                </div>
            }

        </div>
    </div>
</div>


@if (Model.ErrorSummary != null && Model.ErrorSummary.Count > 0)
{
    <div class="">
        <div id="errorModel" class="modal fade" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">ERROR SUMMARY</h4>
                    </div>
                    <div class="modal-body">
                        <div class="alert alert-danger alert-dismissable">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                            <h4><i class="icon fa fa-ban"></i> Alert!</h4>
                            <p>@Model.ErrorMessage</p>
                        </div>

                        @Html.Partial("_ErrorSummary", Model)

                    </div>

                    <div class="modal-footer">
                        @if (Model.ErrorType == RegistrationErrorTypes.Account)
                        {
                            <input type="button" class="btn btn-primary" value="Continue To Save Detail" id="btnContinue" />
                        }
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>


                </div>

            </div>
        </div>
    </div>
}


<input type="hidden" id="CurrentPaidAmount" value="0" />


<script type="text/javascript">
    $(function () {
        $("#SankalpAmount").attr("readonly", "readonly");

        if (parseInt($("#AccountDetail_DueAmount").val()) > 0) {
            $("#CurrentPaidAmount").val(parseInt($("#AccountDetail_DueAmount").val()));
        }
        var _searchResult = [];

        handleTransactionsControl();

        $("#TransactionDetail_DateOfIssue").attr("readonly", "readonly");
        $("#TransactionDetail_DateOfIssue").datepicker({
            format: "MM/dd/yyyy",
            autoclose: true
        });
        $("#AccountDetail_DateOfReceipt").attr("readonly", "readonly");
        $("#AccountDetail_DateOfReceipt").datepicker({
            format: "MM/dd/yyyy",
            autoclose: true
        });

        $("#Yajmans_CityId").change(function () {
            $('#Yajmans_MandalId').empty().trigger('liszt:updated');
            $.get("../../mandal/loadmandalbycity", { cityId: $("#Yajmans_CityId").val() }, function (response) {

                $.each(response.data, function (key, value) {
                    $("#Yajmans_MandalId").append($("<option value='" + value.Value + "'>" + value.Text + "</option>"));
                });
                $('#Yajmans_MandalId').trigger("liszt:updated");
            });
        });


        $("#Karyakar_CityId").change(function () {
            LoadMandals($("#Karyakar_CityId").val(), 0);
        });

        function LoadMandals(city, selectedMandal) {
            $('#Karyakar_MandalId').empty().trigger('liszt:updated');
            $.get("../../mandal/loadmandalbycity", { cityId: city }, function (response) {

                $.each(response.data, function (key, value) {
                    $("#Karyakar_MandalId").append($("<option value='" + value.Value + "'>" + value.Text + "</option>"));
                });
                $('#Karyakar_MandalId').trigger("liszt:updated");
                if (parseInt(selectedMandal) > 0) {

                    $("#Karyakar_MandalId").val(selectedMandal);
                    $("#Karyakar_MandalId").trigger("liszt:updated");
                }
            });
        }

        $("#SankalpAmount").on("keyup", function () {
            CalculateDueAmount();
        });

        $("#AccountDetail_PaidAmount").on("keyup", function () {
            CalculateDueAmount();
        });



        $("#TransactionDetail_TransactionTypeId").on("change", function () {
            handleTransactionsControl();
        });

        function handleTransactionsControl() {
            if (parseInt($("#TransactionDetail_TransactionTypeId").val()) > 1) {
                $("#TransactionDetail_TransactionNumber").removeAttr("disabled", "disabled");
                $("#TransactionDetail_DateOfIssue").removeAttr("disabled", "disabled");
                $("#TransactionDetail_BankName").removeAttr("disabled", "disabled");

                $("#lblTransNo").text($("#TransactionDetail_TransactionTypeId :selected").text() + " Number");
            }
            else {
                $("#lblTransNo").text("Number");
                $("#TransactionDetail_TransactionNumber").val("");
                $("#TransactionDetail_DateOfIssue").val("");
                $("#TransactionDetail_BankName").val("");

                $("#TransactionDetail_TransactionNumber").attr("disabled", "disabled");
                $("#TransactionDetail_DateOfIssue").attr("disabled", "disabled");
                $("#TransactionDetail_BankName").attr("disabled", "disabled");
            }
        }

        $("#Karyakar_Mobile").autocomplete({

            source: function (request, response) {
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: '/filter/mobile',
                    data: "{'searchTxt':'" + $("#Karyakar_Mobile").val() + "'}",
                    dataType: "json",
                    error: function (result) {
                        alert("Please try again.");
                    },
                    success: function (result) {
                        $(".ui-helper-hidden-accessible").hide();
                        if (result.status == "success") {
                            response($.map(result.data, function (item) {

                                return {
                                    value: item.Mobile,
                                    label: ' ' + item.Mobile + '(' + item.FullName + ')',
                                    firstname: item.FirstName,
                                    middlename: item.MiddleName,
                                    lastname: item.LastName,
                                    id: item.Id,
                                    city: item.CityId,
                                    mandal: item.MandalId
                                }
                            }));
                        }
                    }
                });
            },
            minLength: 10,
            select: function (event, ui) {

                $("#Karyakar_FirstName").val(ui.item.firstname == "New" ? "" : ui.item.firstname);
                $("#Karyakar_MiddleName").val(ui.item.middlename);
                $("#Karyakar_LastName").val(ui.item.lastname);
                $("#Karyakar_Id").val(ui.item.id);
                $("#Karyakar_CityId").val(ui.item.city);
                $("#Karyakar_CityId").trigger("liszt:updated");
                LoadMandals(ui.item.city, ui.item.mandal);

            },
        });

        jQuery.validator.addMethod("SelectedCity", validateDropdownValue, "@CommonHelper.PlaceHolderDrdForCity");
        jQuery.validator.addMethod("SelectedMandal", validateDropdownValue, "@CommonHelper.PlaceHolderDrdForMandal");
        jQuery.validator.addMethod("SelectedGrade", validateDropdownValue, "@CommonHelper.ValMsgDrdForSevaGrade");

        $.validator.setDefaults({ ignore: ":hidden:not(select)" });

        $("#sevaForm").validate({
            rules: {
                "SevaGradeId": { SelectedGrade: '0' },
                "SankalpAmount": { required: true },
                "AccountDetail.PaidAmount": { required: true },
                "AccountDetail.BookNo": { required: true },
                "AccountDetail.ReceiptNo": { required: true },
                "AccountDetail.DateOfReceipt": { required: true }
            },
            messages:
            {

                "SevaGradeId": {
                    SelectedGrade: '@CommonHelper.ValMsgDrdForSevaGrade'
                },

                "SankalpAmount": { required: '@CommonHelper.ValMsgTxtForAmount' },
                "AccountDetail.PaidAmount": { required: '@CommonHelper.ValMsgTxtForAmount' },
                "AccountDetail.BookNo": { required: '@CommonHelper.ValMsgTxtForAccountBookNo' },
                "AccountDetail.ReceiptNo": { required: '@CommonHelper.ValMsgTxtForAccountBookReceiptNo' },
                "AccountDetail.DateOfReceipt": { required: '@CommonHelper.ValMsgTxtForDateOfReceipt' },

            },
            submitHandler: function (form) {
                if (parseInt($("#AccountDetail_DueAmount").val()) < 0) {

                    $("#SankalpAmount").val(parseInt($("#SankalpAmount").val()) + parseInt($("#AccountDetail_DueAmount").val().replace('-', '')));

                }
                form.submit();
            }
        });


        function validateDropdownValue(value, element, param) {

            if (value == param) {
                return false;
            }
            else {
                return true;
            }
        }

        $("#btnContinue").click(function () {
            $("#IsContinue").val(true);
            $("#sevaForm").submit();

        })
    })



    function CalculateDueAmount() {

        $.get("../../../yagna/getdueamount/", { id: $("#AccountDetail_Id").val(), yid: $("#Yajmans_Id").val(), amount: $("#AccountDetail_PaidAmount").val() == "" ? "0" : $("#AccountDetail_PaidAmount").val() }, function (response) {

            $("#AccountDetail_DueAmount").val(response.d);
        });

    };
</script>
